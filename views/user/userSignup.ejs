<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>UserSignUp</title>
    <link rel="stylesheet" href="/css/userLogin.css">
    <link rel="stylesheet" href="path/to/font-awesome/css/font-awesome.min.css">
    <script src="https://kit.fontawesome.com/65b842e152.js" crossorigin="anonymous"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

    <style>
        #create-button:disabled {
      background-color: #696868; /* Change the color as needed */
      cursor: not-allowed;
    }
    </style>

    <style>
      @import url('//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css');


.success-msg{
  

  border-radius: 3px 3px 3px 3px;
}
.info-msg {
  color: #059;
  background-color: #BEF;
}
.success-msg {
  color: #270;

}
    </style>

</head>

<body>
    <div>
        <img class="logo" src="/images/ds_wht.png" alt="">
    </div>

    <div class="login-page">
        <div class="form" style="margin-top: -40px;">
            <i class="fa-solid fa-user fa-xl" style="color: #4ff977"></i>
            <br>
            <br>
            <h6 style="color: #4ff977">User SignUp</h6>
            <% if (refer!="") { %>
              <div class="success-msg"><i class="fa fa-check"></i>Referal applied succesfully</div>
            <% } %>
            
            <br>
            <form class="register1-form" action="/signupotp" method="post"  onsubmit="validateForm()">
                <input id="username" type="text" placeholder="username" name="username" oninput="validateUsername()" required/>
                <p id="username-error" class="error-message" style="color: red; margin-bottom: 10px;font-size: small;"></p>

                <input id="email" type="email" placeholder="email" name="email" oninput="validateEmail()" required/>
                <p id="email-error" class="error-message" style="color: red; margin-bottom: 10px;font-size: small;"></p>

                <input id="mobile" type="text" placeholder="mobile" name="mobile" oninput="validateMobile()" required/>
                <p id="mobile-error" class="error-message" style="color: red; margin-bottom: 10px;font-size: small;"></p>

                <input id="password" type="password" placeholder="password" name="password" oninput="validatePassword()" required/>
                <p id="password-error" class="error-message" style="color: red; margin-bottom: 10px;font-size: smaller;"></p>

                <input id="confirmpassword" type="password" placeholder="confirm password" name="confirm password" oninput="validateConfirmPassword()" required/>
                <p id="confirmpassword-error" class="error-message" style="color: red; margin-bottom: 10px;font-size: small;"></p>
                <%if(locals.userExist){%>
                    <div class="" style="color: #4ff977;">Existing User Please Login</div>
                <%}%>

                <input type="text" value="<%= refer%>" name="referredBy" hidden>

                <button  id="create-button" type="submit" disabled>create</button>
                
                <p class="message">Already registered? <a href="/userlogin">Sign In</a></p>
            </form>
        </div>
    </div>



    <script>


    function validateUsername() {
        var usernameInput = document.getElementById('username');
        var usernameError = document.getElementById('username-error');
        var usernameValue = usernameInput.value;

        // Check for spaces
        if (/\s/.test(usernameValue)) {
            usernameError.textContent = 'Username cannot contain spaces';
            usernameInput.setCustomValidity(''); // Reset custom validity
        } else {
                usernameError.textContent = '';
            // Check for uppercase letters
            if (/[A-Z]/.test(usernameValue)) {
                usernameError.textContent = 'Username cannot contain uppercase letters';
                usernameInput.setCustomValidity(''); // Reset custom validity
            } else {
                usernameError.textContent = '';
                usernameInput.setCustomValidity(''); // Reset custom validity
            }
        }
        updateCreateButtonState();
    }

    function validateForm() {
      validateUsername(); // Call the username validation function

      // Additional form validation logic can be added here

      // Return true if the form is valid, false otherwise
      return document.querySelector('.error-message').textContent === '';
    }

    function validateEmail() {
      var emailInput = document.getElementById('email');
      var emailError = document.getElementById('email-error');
      var emailValue = emailInput.value;

      // Check for spaces
      if (/\s/.test(emailValue)) {
        emailError.textContent = 'Email cannot contain spaces';
        emailInput.setCustomValidity('');
      } else {
        emailError.textContent = '';
        // Common email validation
        var emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(emailValue)) {
          emailError.textContent = 'Invalid email format';
          emailInput.setCustomValidity('');
        } else {
          emailError.textContent = '';
          emailInput.setCustomValidity('');
        }
      }
      updateCreateButtonState();
    }


    function validateMobile() {
      var mobileInput = document.getElementById('mobile');
      var mobileError = document.getElementById('mobile-error');
      var mobileValue = mobileInput.value;

      // Check for non-numeric characters
      if (!/^\d+$/.test(mobileValue)) {
        mobileError.textContent = 'Mobile number should contain only numbers';
        mobileInput.setCustomValidity('');
      } else {
        mobileError.textContent = '';

        // Check for exactly 10 digits
        if (mobileValue.length !== 10) {
          mobileError.textContent = 'Mobile number should have 10 digits';
          mobileInput.setCustomValidity('');
        } else {
          mobileError.textContent = '';
          mobileInput.setCustomValidity('');
        }
      }
      updateCreateButtonState();
    }

    function validatePassword() {
      var passwordInput = document.getElementById('password');
      var passwordError = document.getElementById('password-error');
      var passwordValue = passwordInput.value;

      // Password criteria: At least 8 characters, one uppercase letter, one lowercase letter, and one digit
      var passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$/;

      if (!passwordRegex.test(passwordValue)) {
        passwordError.textContent = 'Password must be at least 8 characters and include one uppercase letter, one lowercase letter, and one digit';
        passwordInput.setCustomValidity('');
      } else {
        passwordError.textContent = '';
        passwordInput.setCustomValidity('');
      }

      updateCreateButtonState();
    }

    function validateConfirmPassword() {
      var passwordInput = document.getElementById('password');
      var confirmPasswordInput = document.getElementById('confirmpassword');
      var confirmPasswordError = document.getElementById('confirmpassword-error');
      var confirmPasswordValue = confirmPasswordInput.value;

      // Check if password and confirm password match
      if (passwordInput.value !== confirmPasswordValue) {
        confirmPasswordError.textContent = 'Passwords do not match';
        confirmPasswordInput.setCustomValidity('');
      } else {
        confirmPasswordError.textContent = '';
        confirmPasswordInput.setCustomValidity('');
      }

      updateCreateButtonState();
    }

    function updateCreateButtonState() {
      var usernameError = document.getElementById('username-error').textContent;
      var emailError = document.getElementById('email-error').textContent;
      var mobileError = document.getElementById('mobile-error').textContent;
      var passwordError = document.getElementById('password-error').textContent;
      var confirmPasswordError = document.getElementById('confirmpassword-error').textContent;
      var createButton = document.getElementById('create-button');

      // Disable the button if there are any errors
      createButton.disabled = usernameError || emailError || mobileError || passwordError || confirmPasswordError;
    }

    function validateForm() {
      validateUsername();
      validateEmail();
      validateMobile();
      validatePassword();
      validateConfirmPassword();

      // Additional form validation logic can be added here

      // Return true if the form is valid, false otherwise
      return document.querySelector('.error-message').textContent === '';
    }

    </script>

</body>

</html>